name: Workflow
on:
  push:
    branches:
      - main
      - '**'
jobs:
  SAST:
    runs-on: ubuntu-24.04
    steps: 
      # Paso 1: Clonar el código fuente
      - name: Checkout source code
        uses: actions/checkout@v3

      # Paso 2: Configurtar el JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Paso 3 Define una variable de entorno
      - name: Set Environment Variables
        run: echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
      
      # Paso 4 Valida que exista y Configura build.gradle
      - name: Validate and Configure build.gradle
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
        run: |
          if [ -f "build.gradle" ]; then
            echo "Archivo build.gradle encontrado."
            echo "Verificando configuración del plugin Sonar..."
            if ! grep -q 'id "org.sonarqube" version "3.3"' build.gradle; then
              sed -i '/id '\''java'\''/a \ \ \ \ id '\''org.sonarqube'\'' version '\''3.3'\''' build.gradle
              echo "Plugin de SonarCloud añadido a build.gradle."
            else
              echo "Plugin de SonarCloud ya esta configurado en build.gradle."
            fi
          else
            echo "No se encontró archivo build.gradle."
            exit 1
          fi
      # Paso 5 se verifica si existe un SONAR CLOUD YA CREADO
      - name: Verificar si el proyecto existe en SonarCloud
        id: check-sonar-project
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
          REPO_NAME: ${{ github.event.repository.name }}
          SONAR_ORG: "devsecopsusach"
        run: |
          echo "Verificando si el proyecto existe en SonarCloud..."
          project_exists=$(curl -s -o /dev/null -w "%{http_code}" -u "$SONAR_TOKEN:" \
            "https://sonarcloud.io/api/projects/search?projects=$REPO_NAME")

          if [ "$project_exists" -eq 200 ]; then
            echo "El proyecto $REPO_NAME ya existe en SonarCloud."
          else
            echo "El proyecto $REPO_NAME no existe en SonarCloud. El análisis de SonarCloud lo creará automáticamente."
          fi

          # Asegurar que gradlew tenga permisos de ejecución
          chmod +x ./gradlew

          # Ejecutar análisis de SonarCloud sin sonar.organization
          ./gradlew sonarqube \
            -Dsonar.projectKey=${{ github.event.repository.name }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_CLOUD_TOKEN }}